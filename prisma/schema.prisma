// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Donation {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  address           String
  donationDate      DateTime       
  totalParticipants String
  bountyAmount      String
  participants      Participant[]
}

model Participant {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  publicKey  String
  name       String
  address    String
  gender     String
  age        String
  contactEmail String
  contactNumber String
  sampleDisease String

  // CONNECTION TO DONATIONS
  donationId      String?      @db.ObjectId
  donation        Donation?   @relation(fields: [donationId], references: [id])
}

model BloodDonation {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  bloodType        String   // e.g., A+, B-, O+, AB-
  donationDate     DateTime
  expirationDate   DateTime
  volume           Int      // Volume in milliliters
  screeningStatus  String   // e.g., "Passed", "Failed"
  testResults      String?  // Results of tests, if any
  status           String   // e.g., "Pending", "Completed", "In Use", "Discarded"
  // donor            Participant @relation(fields: [donorId], references: [id])
  donorId          String   @db.ObjectId
  collectionSite   String   // Location where the blood was collected
  storageLocation  String   // Where the blood is stored
  transportation   String?  // Transportation details
}





